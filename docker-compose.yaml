services:
# ========================================================================================================

  mqtt-broker:
    container_name: mqtt-broker
    image: eclipse-mosquitto
    restart: always
    volumes:
      - ./mqtt-broker/mosquitto.cfg:/mosquitto/config/mosquitto.conf
    ports:
      - "21883:1883"
# ========================================================================================================

  grafana-server:
    container_name: grafana-server
    image: grafana/grafana:9.3.2-ubuntu
    restart: always
    user: "0:1000"
    volumes:
      - "./grafana/grafanadata:/var/lib/grafana"
    env_file:
      - ./env_vars/.env_grafana
    ports:
      - "3000:3000"
# ========================================================================================================

  database:
    environment:
      MYSQL_DATABASE: pjiot
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/secret-db
    image: mysql
    restart: always
    secrets:
      - secret-db
    volumes:
      - ./database/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    ports:
      - "1883:3306"
# ========================================================================================================

  connector:
    build:
      context: .
      dockerfile: ./connector/Dockerfile
    volumes:
      - ./connector/connector.out:/connector.out:rw
    depends_on:
      - mqtt-broker
    restart: always
# ========================================================================================================
  reverse-proxy:
    depends_on:
      - connector
    image: nginx
    ports:
      - 80:80
#      - 443:443
    restart: always
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/vm0.pji3.sj.ifsc.edu.br/fullchain.pem:/etc/nginx/fullchain.pem:ro
      - /etc/letsencrypt/live/vm0.pji3.sj.ifsc.edu.br/privkey.pem:/etc/nginx/privkey.pem:ro
# ========================================================================================================
#  frontend:
#    image: node
#    command: sh -c "cd /app && npm install && npm install -g vite && npm run build && vite preview --host 0.0.0.0"
#    restart: always
#    volumes:
#      - ./frontend:/app
secrets:
  secret-db:
    file: ./database/.secret-db

volumes:
  influxdb_data:


